apiVersion: apps/v1
kind: Deployment #https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#deploymentspec-v1-apps
metadata:
  name: sbservicedep
spec:
  replicas: 1
  selector:
    matchLabels:
      type: backend
      sub-domain: svc1
#  minReadySeconds: 1
#  progressDeadlineSeconds: 60
#  revisionHistoryLimit: 5
#  strategy:
#    type: RollingUpdate #The other normal option is Recreate
#    rollingUpdate:
#      maxSurge: 1
#      maxUnavailable: 1
  template:
    metadata:
      name: sbservicers
      labels:
        type: backend
        sub-domain: svc1
    spec:
      containers:
      - name: sbservicecont
        image: sbserviceimg:latest
        imagePullPolicy: Never
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
#        ports:
#          - containerPort: 8080
#        readinessProbe:
#            httpGet:
#              path: /sbservice/hello
#              port: 8080
#        livenessProbe:
#            httpGet:
#              path: /sbservice/hello
#              port: 8080
#            initialDelaySeconds: 2
---

apiVersion: v1
kind: Service
metadata:
  name: sbservicesvc
spec:
  #type: NodePort
  selector:
    type: backend
    sub-domain: svc1
  ports:
  - port: 8080 # PODS identitiy in the cluster port
    targetPort: 8080 # Containers port (exposed by docker)
    #nodePort: 30001 # The port on which the service can be accessed outside using node IP

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: test-ingress
spec:
  backend:
    serviceName: sbservicesvc
    servicePort: 8080 # Should match the port in service def(cluster port of the service)